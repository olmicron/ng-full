---
- name: "Установка и настройка Zabbix сервера на Debian 11"
  hosts: local_debian
  become: true
  become_method: sudo
  gather_facts: true
  vars:
    tmp_zabbix_repository: /tmp/zabbix-release_repository.deb
    tmp_zabbix_sql_dir: /tmp/zabbix-sql/
    postgres_os_user: postgres
    zabbix_os_user: zabbix
    zabbix_db_user: zabbix
    zabbix_db_name: zabbix
    zabbix_db_pass: 123456789
    zabbix_port_web: 23000
  tasks:

    - name: "Проверяем добавлен ли репозиторий postgreesql"
      stat:
        path: /etc/apt/sources.list.d/postgresql.list
      register: stat_postgresql_repo

    - name: "Добавление репозитория и ключа"
      block:
        - name: "Добавление ключа репозитория"
          apt_key:
            url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
            state: present

        - name: "Добавление репозитория"
          apt_repository:
            repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
            state: present
            filename: postgresql
      when: stat_postgresql_repo.stat.exists != true

    - name: "Установка/обновление postgresql"
      apt:
        # Вызываем apt update
        update_cache: yes
        # и потом устанавливаем postgresql
        name: postgresql
        state: latest

    - name: "Включение автозапуска postgresql"
      systemd:
        enabled: true
        state: started
        name: postgresql

    - name: "Получаем package facts"
      package_facts:
        manager: auto


    # Проверяем, что zabbix-release репозиторий не установлен
    # dpkg-query -W zabbix-release
    - block:
      - name: "Загрузка конфига репозитория"
        get_url:
          url: https://repo.zabbix.com/zabbix/6.0/debian/pool/main/z/zabbix-release/zabbix-release_6.0-4%2Bdebian11_all.deb
          dest: /tmp/zabbix-release_repository.deb

      - name: "Установка репозитория (zabbix-release)"
        apt:
          deb: "{{ tmp_zabbix_repository }}"
      when: "'zabbix-release' not in ansible_facts.packages"

    - name: "Установка/обновление zabbix-компонентов"
      apt:
        update_cache: yes
        name:
          - zabbix-server-pgsql
          - zabbix-frontend-php
          - php7.4-pgsql # меняется, в зависимости от ОС и версии ОС
          - zabbix-nginx-conf
          - zabbix-sql-scripts
          - zabbix-agent
        state: latest

    - name: "Установка python3-pip для работы с модулем postgresql в ansible"
      apt:
        name: python3-pip
        state: present

    # после завершения выполнения всех команд в плейбуке, модуль можно удалить
    - name: "Установка pip модуля psycopg2-binary для работы с postgresql"
      pip:
        name: psycopg2-binary

    # ansible-galaxy collection install community.postgresql
    - name: "Создаём пользователя БД"
      community.postgresql.postgresql_user:
        name: "{{ zabbix_db_user }}"
        password: "{{ zabbix_db_pass }}"
      become: true
      become_user: "{{ postgres_os_user }}"

    - name: "Создаём БД zabbix"
      community.postgresql.postgresql_db:
        name: "{{ zabbix_db_name }}"
        owner: "{{ zabbix_db_user }}"
        encoding: UTF-8
      become: true
      become_user: "{{ postgres_os_user }}"

    - name: "Восстановление дампа таблиц zabbix"
      community.postgresql.postgresql_db:
        target: /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz
        name: "{{ zabbix_db_name }}"
        owner: "{{ zabbix_db_user }}"
        state: restore
        encoding: UTF-8
      become: true
      become_user: "{{ postgres_os_user }}"

    - name: "Включение автозапуска postgresql"
      systemd:
        enabled: true
        state: started
        name: postgresql

    - name: "Включение автозапуска zabbix-server"
      systemd:
        enabled: true
        state: started
        name: zabbix-server

    - name: "Включение автозапуска zabbix-agent"
      systemd:
        enabled: true
        state: started
        name: zabbix-agent

    # Если параметр DBPassword уже указан, то он будет заменён
    - name: "Указываем заббиксу пароль к БД"
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        create: false
        regexp: '^DBPassword='
        insertafter: '^# DBPassword='
        line: "DBPassword={{ zabbix_db_pass }}"

    # Если параетр DBPassword уже указан, то он будет заменён
    - name: "Указываем заббиксу порт для web"
      ansible.builtin.lineinfile:
        path: /etc/zabbix/nginx.conf
        create: false
        regexp: '^#?\s+listen\s+\d+;'
        insertafter: '^server {'
        line: "\tlisten\t{{ zabbix_port_web }};"

    - name: "Деактивируем конфиг nginx по умолчанию"
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: "Активируем конфиг (создаём символьную ссылку)"
      file:
        src: /etc/zabbix/nginx.conf
        dest: /etc/nginx/sites-enabled/zabbix
        state: link

    - name: "Рестарт postgresql"
      systemd: "state=restarted name=postgresql"
    - name: "Рестарт zabbix-server"
      systemd: "state=restarted name=zabbix-server"
    - name: "Рестарт zabbix-agent"
      systemd: "state=restarted name=zabbix-agent"
    - name: "Рестарт nginx"
      systemd: "state=restarted name=nginx"
    - name: "Рестарт php7.4-fpm"
      systemd: "state=restarted name=php7.4-fpm"

    - name: "Получаем service facts"
      service_facts:

    - name: "Проверяем, что сервис postgresql работает"
      fail:
        msg: "Сервис postgresql не работает!"
      when: ansible_facts.services['postgresql']['state'] != "running"

    - name: "Проверяем, что сервис zabbix-server работает"
      fail:
        msg: "Сервис postgresql не работает!"
      when: ansible_facts.services['zabbix-server']['state'] != "running"

    - name: "Проверяем, что сервис nginx работает"
      fail:
        msg: "Сервис postgresql не работает!"
      when: ansible_facts.services['zabbix-server']['state'] != "running"

    - debug:
        msg: "zabbix: http://{{ ansible_all_ipv4_addresses[0] }}:{{ zabbix_port_web }}/"